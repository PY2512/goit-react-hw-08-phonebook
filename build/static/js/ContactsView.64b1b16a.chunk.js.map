{"version":3,"file":"static/js/ContactsView.64b1b16a.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.jsx","redux/contacts/contacts-selector.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/views/ContactsView/ContactsView.module.css?919f","views/ContactsView/ContactsView.jsx"],"sourcesContent":["export const getFilterValue = state => state.contacts.filter;\r\n\r\n// export default getFilterValue","import {getFilterValue} from './../filter/filter-selectors';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilterValue(state);\r\n\r\n    return contacts.filter(\r\n    ({ name, number }) =>\r\n        name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        number.includes(filter),\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"contactForm_box__+RBiU\",\"title\":\"contactForm_title__vvHOW\",\"form\":\"contactForm_form__X+VTn\",\"label\":\"contactForm_label__MiLLV\",\"input\":\"contactForm_input__P8DjL\",\"number\":\"contactForm_number__EI-yx\",\"btn\":\"contactForm_btn__HJ+EL\"};","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import nextId from 'react-id-generator';\r\nimport { getContacts } from 'redux/contacts/contacts-selector';\r\nimport { addContact } from 'redux/contacts/contacts-operation';\r\n\r\nimport style from './contactForm.module.css'\r\n\r\n\r\n\r\nfunction ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = ({ currentTarget: { name, value } }) => {\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n        \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n        \r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleBtnSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        if (name === '' && number === '') {\r\n            return alert('EMPTY')\r\n        }\r\n\r\n        contacts.some(\r\n            contact =>\r\n                contact.name.toLowerCase() === name.toLowerCase() ||\r\n                contact.number === number,\r\n        )\r\n        ? alert(`${name} is allready in contacts!`)\r\n        : dispatch(addContact({name, number,}));\r\n        // dispatch(addContact({name, number, id: nextId() }));\r\n\r\n        reset()\r\n    };\r\n\r\n    const reset = () => {\r\n        setNumber('');\r\n        setName('');\r\n    };\r\n\r\n    return (\r\n        <div className={style.box}>\r\n            <h2 className={style.title}>Phonebook</h2>\r\n            <form \r\n        onSubmit={handleBtnSubmit}\r\n        className={style.form}\r\n        autoComplete=\"of\">\r\n            <label className={style.label}>Name\r\n            <input\r\n            autoFocus\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleInputChange}\r\n            className={style.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n            >\r\n            </input>\r\n            </label>\r\n            <label className={style.label}>Number\r\n            <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleInputChange}\r\n            className={style.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n            >\r\n            </input>\r\n            </label>\r\n            <button type=\"submit\" className={style.btn}>Add contact</button>\r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__LK9o6\",\"item\":\"ContactList_item__j2AAw\",\"box\":\"ContactList_box__nPaoy\",\"name\":\"ContactList_name__ftwRj\",\"number\":\"ContactList_number__TXLPz\",\"btn\":\"ContactList_btn__rEVcl\"};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/contacts/contacts-selector';\r\nimport style from './ContactList.module.css'\r\nimport { deleteContact } from './../../redux/contacts/contacts-operation';\r\n\r\n\r\nconst ContactList = () => {\r\n    const visibleContacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const oneDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n    return (\r\n        <ul className={style.list}>\r\n        {visibleContacts.map(({id, name, number}) => (\r\n            <li key={id} className={style.item}>\r\n                <div className={style.box}>\r\n                    <p className={style.name}>{name}: </p>\r\n                    <p className={style.number}>{number}</p>\r\n                    <button className={style.btn}\r\n                    onClick={() => oneDeleteContact(id)}>\r\n                    Delete\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n    )\r\n};\r\n\r\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"filter_box__TtqVr\",\"title\":\"filter_title__aNdyq\",\"label\":\"filter_label__EChyd\",\"input\":\"filter_input__5CyzU\"};","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterValue } from \"redux/filter/filter-selectors\";\r\nimport {changeFilter} from './../../redux/filter/filter-actions';\r\n\r\nimport style from \"./filter.module.css\";\r\n\r\n\r\nconst Filter = () => {\r\n    const filterValue = useSelector(getFilterValue);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = ({target: {value}}) => dispatch(changeFilter(value));\r\n\r\n    return (\r\n        <div className={style.box}>\r\n            <h2 className={style.title} >Contacts</h2>\r\n\r\n            <label className={style.label}>\r\n                Find contacts by name\r\n                <input\r\n                type=\"text\"\r\n                value={filterValue}\r\n                onChange={onChange}\r\n                className={style.input}\r\n                ></input>\r\n            </label>\r\n        </div>\r\n\r\n        \r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactsView_box__rqT2v\"};","import ContactForm from \"components/ContactForm/ContactForm\";\r\nimport ContactList from \"components/ContactList/ContactList\";\r\nimport Filter from \"components/Filter/Filter\";\r\nimport s from './ContactsView.module.css'\r\n\r\n\r\nfunction ContactsView() {\r\n    return (\r\n        <>\r\n        <h1 className={s.box}>This is Contacts page</h1>\r\n\r\n        <ContactForm/>\r\n        <Filter/>\r\n        <ContactList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactsView;"],"names":["getFilterValue","state","contacts","filter","getContacts","items","getVisibleContacts","name","number","toLowerCase","includes","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","currentTarget","value","reset","className","style","onSubmit","event","preventDefault","alert","some","contact","addContact","autoComplete","autoFocus","type","onChange","pattern","title","required","visibleContacts","map","id","onClick","deleteContact","oneDeleteContact","filterValue","target","changeFilter","s"],"sourceRoot":""}