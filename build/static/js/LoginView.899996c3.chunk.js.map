{"version":3,"file":"static/js/LoginView.899996c3.chunk.js","mappings":"yPACA,EAAsB,sBAAtB,EAAoD,wBAApD,EAAkF,sB,UCM5EA,EAAe,CACjBC,MAAO,GACPC,SAAU,IAGd,SAASC,IAAuC,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAC/C,OAAQA,EAAOC,MACX,IAAK,QACD,OAAO,kBAAIF,GAAX,IAAkBH,MAAOI,EAAOE,UAEpC,IAAK,WACD,OAAO,kBAAIH,GAAX,IAAkBF,SAAUG,EAAOE,UAKvC,QACI,OAAOH,GAiDf,MA7CA,WACI,OAA0BI,EAAAA,EAAAA,YAAWL,EAASH,GAA9C,eAAOI,EAAP,KAAcK,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAOjB,OACI,wBAAKC,UAAQ,EAACC,UAAWC,GAAzB,YACI,kBAAMC,SAPO,SAAAC,GACjBA,EAAMC,iBACNP,GAASQ,EAAAA,EAAAA,IAAMd,KAKmBe,aAAa,MAA3C,WACI,sCAEI,kBACIC,WAAS,EACTP,UAAWC,EACXR,KAAK,OACLe,KAAK,QACLC,MAAOlB,EAAMH,MACbsB,QAAQ,sEACRC,MAAM,4CACNC,YAAY,QACZC,SAAU,SAAAV,GAAK,OAAIP,EAAS,CAACH,KAAMU,EAAMW,OAAON,KAAMd,QAASS,EAAMW,OAAOL,eAIpF,yCAEI,kBACAT,UAAWC,EACXR,KAAK,WACLe,KAAK,WACLC,MAAOlB,EAAMF,SACbuB,YAAY,WACZC,SAAU,SAAAV,GAAK,OAAIP,EAAS,CAACH,KAAMU,EAAMW,OAAON,KAAMd,QAASS,EAAMW,OAAOL,eAIhF,mBAAQhB,KAAK,SAASO,UAAWC,EAAjC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/LoginView/Logiview.module.css?7fc2","views/LoginView/LoginView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Logiview_box__89Bim\",\"input\":\"Logiview_input__i9pep\",\"btn\":\"Logiview_btn__gke75\"};","import { useReducer } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logIn } from \"redux/auth/auth-operations\";\r\n\r\nimport style from './Logiview.module.css';\r\n\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\nswitch (action.type) {\r\n    case 'email':\r\n        return {...state, email: action.payload};\r\n        \r\n    case 'password':\r\n        return {...state, password: action.payload};\r\n\r\n    // case 'reset':\r\n    //     return initialState\r\n\r\n    default:\r\n        return state;\r\n    }\r\n}\r\n\r\nfunction LoginView() {\r\n    const [state, setState] = useReducer(reducer, initialState);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(logIn(state));\r\n    }\r\n\r\n    return (\r\n        <div children className={style.box}>\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <label>\r\n                    Email\r\n                    <input\r\n                        autoFocus\r\n                        className={style.input}\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        value={state.email}\r\n                        pattern=\"[a-zA-Z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\"\r\n                        title=\"Please check the entered data is correct.\"\r\n                        placeholder=\"email\"\r\n                        onChange={event => setState({type: event.target.name, payload: event.target.value})}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                Password\r\n                    <input\r\n                    className={style.input}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={state.password}\r\n                    placeholder=\"password\"\r\n                    onChange={event => setState({type: event.target.name, payload: event.target.value})}\r\n                    />\r\n                </label>\r\n\r\n                <button type=\"submit\" className={style.btn}>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginView;"],"names":["initialState","email","password","reducer","state","action","type","payload","useReducer","setState","dispatch","useDispatch","children","className","style","onSubmit","event","preventDefault","logIn","autoComplete","autoFocus","name","value","pattern","title","placeholder","onChange","target"],"sourceRoot":""}