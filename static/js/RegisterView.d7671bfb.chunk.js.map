{"version":3,"file":"static/js/RegisterView.d7671bfb.chunk.js","mappings":"uPACA,EAAsB,0BAAtB,EAAwD,4BAAxD,EAA0F,0B,UCMpFA,EAAe,CACjBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGd,SAASC,EAASC,EAAOC,GACvB,OAAQA,EAAOC,MAEf,IAAK,OAGH,IAAK,QAGL,IAAK,WACL,OAAO,kBAAKF,GAAZ,cAAoBC,EAAOC,KAAOD,EAAOE,UAE3C,QACE,OAAOH,GAwEX,MAnEA,WACI,OAA0BI,EAAAA,EAAAA,YAAWL,EAASJ,GAA9C,eAAOK,EAAP,KAAcK,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAOjB,OACI,gBAAKC,UAAWC,EAAhB,UACI,kBAAMC,SAPO,SAAAC,GACjBA,EAAMC,iBACNN,GAASO,EAAAA,EAAAA,IAASb,KAKgBc,aAAa,MAA3C,WACI,qCAEA,kBACIC,WAAS,EACTP,UAAWC,EACXP,KAAK,OACLN,KAAK,OACLoB,MAAOhB,EAAMJ,KACbqB,MAAM,oDACNC,YAAY,OACZC,SAAU,SAAAR,GAAK,OACfN,EAAS,CAAEH,KAAMS,EAAMS,OAAOxB,KAAMO,QAASQ,EAAMS,OAAOJ,SAE1DK,UAAQ,QAIZ,sCAEI,kBACIb,UAAWC,EACXP,KAAK,OACLN,KAAK,QACLoB,MAAOhB,EAAMH,MACbyB,QAAQ,sEACRL,MAAM,4CACNC,YAAY,QACZC,SAAU,SAAAR,GAAK,OAAIN,EAAS,CAAEH,KAAMS,EAAMS,OAAOxB,KAAMO,QAASQ,EAAMS,OAAOJ,SAE7EK,UAAQ,QAIhB,yCAEI,kBACIP,aAAa,MACbN,UAAWC,EACXP,KAAK,WACLN,KAAK,WACLoB,MAAOhB,EAAMF,SACboB,YAAY,WACZC,SAAU,SAAAR,GAAK,OAAIN,EAAS,CAAEH,KAAMS,EAAMS,OAAOxB,KAAMO,QAASQ,EAAMS,OAAOJ,eAKzF,mBAAQd,KAAK,SAASM,UAAWC,EAAjC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/RegisterView/RegisterView.module.css?6d4e","views/RegisterView/RegisterView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"RegisterView_box__Vlzj8\",\"input\":\"RegisterView_input__uSfYN\",\"btn\":\"RegisterView_btn__zrAF8\"};","import { useReducer } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from \"redux/auth/auth-operations\";\r\n\r\nimport style from './RegisterView.module.css';\r\n\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n}\r\n\r\nfunction reducer (state, action) {\r\n  switch (action.type) {\r\n\r\n  case 'name':\r\n    return { ...state, [action.type]: action.payload };\r\n\r\n    case 'email':\r\n    return { ...state, [action.type]: action.payload };\r\n\r\n    case 'password':\r\n    return { ...state, [action.type]: action.payload };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\n\r\nfunction RegisterView() {\r\n    const [state, setState] = useReducer(reducer, initialState);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(register(state));\r\n    };\r\n\r\n    return (\r\n        <div className={style.box}>\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <label>\r\n                Name\r\n                <input\r\n                    autoFocus\r\n                    className={style.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={state.name}\r\n                    title=\"Please check the correctness of the entered data.\"\r\n                    placeholder=\"name\"\r\n                    onChange={event =>\r\n                    setState({ type: event.target.name, payload: event.target.value })\r\n                    }\r\n                    required\r\n                />\r\n                </label>\r\n\r\n                <label>\r\n                    Email\r\n                    <input\r\n                        className={style.input}\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        value={state.email}\r\n                        pattern=\"[a-zA-Z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\"\r\n                        title=\"Please check the entered data is correct.\"\r\n                        placeholder=\"email\"\r\n                        onChange={event => setState({ type: event.target.name, payload: event.target.value })\r\n                        }\r\n                        required\r\n                        />\r\n                </label>\r\n\r\n                <label>\r\n                    Password\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        className={style.input}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={state.password}\r\n                        placeholder=\"password\"\r\n                        onChange={event => setState({ type: event.target.name, payload: event.target.value })\r\n                        }\r\n                />\r\n                </label>\r\n\r\n            <button type=\"submit\" className={style.btn}>\r\n                Register\r\n            </button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RegisterView;"],"names":["initialState","name","email","password","reducer","state","action","type","payload","useReducer","setState","dispatch","useDispatch","className","style","onSubmit","event","preventDefault","register","autoComplete","autoFocus","value","title","placeholder","onChange","target","required","pattern"],"sourceRoot":""}